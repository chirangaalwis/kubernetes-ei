
apiVersion: v1
data:
  deployment.yaml: |
    wso2.carbon:
      id: ${NODE_IP}
      name: WSO2 EI integrator Analytics
      ports:
        offset: 0
      type: wso2-ei-analytics
    wso2.transport.http:
      transportProperties:
      - name: server.bootstrap.socket.timeout
        value: 60
      - name: client.bootstrap.socket.timeout
        value: 60
      - name: latency.metrics.enabled
        value: true
      listenerConfigurations:
      - id: default
        host: 0.0.0.0
        port: 9091
      - id: msf4j-https
        host: 0.0.0.0
        port: 9444
        scheme: https
        keyStoreFile: ${carbon.home}/resources/security/wso2carbon.jks
        keyStorePassword: wso2carbon
        certPass: wso2carbon
      senderConfigurations:
      - id: http-sender
    siddhi.stores.query.api:
      transportProperties:
      - name: server.bootstrap.socket.timeout
        value: 60
      - name: client.bootstrap.socket.timeout
        value: 60
      - name: latency.metrics.enabled
        value: true
      listenerConfigurations:
      - id: default
        host: 0.0.0.0
        port: 7070
      - id: msf4j-https
        host: 0.0.0.0
        port: 7443
        scheme: https
        keyStoreFile: ${carbon.home}/resources/security/wso2carbon.jks
        keyStorePassword: wso2carbon
        certPass: wso2carbon
    databridge.config:
      workerThreads: 10
      maxEventBufferCapacity: 10000000
      eventBufferSize: 2000
      keyStoreLocation: ${sys:carbon.home}/resources/security/wso2carbon.jks
      keyStorePassword: wso2carbon
      clientTimeoutMin: 30
      dataReceivers:
      - dataReceiver:
          type: Thrift
          properties:
            tcpPort: '7612'
            sslPort: '7712'
      - dataReceiver:
          type: Binary
          properties:
            tcpPort: '9611'
            sslPort: '9711'
            tcpReceiverThreadPoolSize: '100'
            sslReceiverThreadPoolSize: '100'
            hostName: 0.0.0.0
    data.agent.config:
      agents:
      - agentConfiguration:
          name: Thrift
          dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.thrift.ThriftDataEndpoint
          publishingStrategy: async
          trustStorePath: ${sys:carbon.home}/resources/security/client-truststore.jks
          trustStorePassword: wso2carbon
          queueSize: 32768
          batchSize: 200
          corePoolSize: 1
          socketTimeoutMS: 30000
          maxPoolSize: 1
          keepAliveTimeInPool: 20
          reconnectionInterval: 30
          maxTransportPoolSize: 250
          maxIdleConnections: 250
          evictionTimePeriod: 5500
          minIdleTimeInPool: 5000
          secureMaxTransportPoolSize: 250
          secureMaxIdleConnections: 250
          secureEvictionTimePeriod: 5500
          secureMinIdleTimeInPool: 5000
          sslEnabledProtocols: TLSv1.1,TLSv1.2
          ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
      - agentConfiguration:
          name: Binary
          dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.binary.BinaryDataEndpoint
          publishingStrategy: async
          trustStorePath: ${sys:carbon.home}/resources/security/client-truststore.jks
          trustStorePassword: wso2carbon
          queueSize: 32768
          batchSize: 200
          corePoolSize: 1
          socketTimeoutMS: 30000
          maxPoolSize: 1
          keepAliveTimeInPool: 20
          reconnectionInterval: 30
          maxTransportPoolSize: 250
          maxIdleConnections: 250
          evictionTimePeriod: 5500
          minIdleTimeInPool: 5000
          secureMaxTransportPoolSize: 250
          secureMaxIdleConnections: 250
          secureEvictionTimePeriod: 5500
          secureMinIdleTimeInPool: 5000
          sslEnabledProtocols: TLSv1.1,TLSv1.2
          ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
    wso2.metrics:
      enabled: false
      reporting:
        console:
        - name: Console
          enabled: false
          pollingPeriod: 5
    wso2.metrics.jdbc:
      dataSource:
      - &JDBC01
        dataSourceName: java:comp/env/jdbc/WSO2MetricsDB
        scheduledCleanup:
          enabled: true
          daysToKeep: 3
          scheduledCleanupPeriod: 86400
      reporting:
        jdbc:
        - name: JDBC
          enabled: true
          dataSource: *JDBC01
          pollingPeriod: 60
    wso2.artifact.deployment:
      updateInterval: 5
    state.persistence:
      enabled: false
      intervalInMin: 1
      revisionsToKeep: 2
      persistenceStore: org.wso2.carbon.stream.processor.core.persistence.DBPersistenceStore
      config:
        datasource: WSO2_PERSISTENCE_DB
        table: PERSISTENCE_TABLE
    wso2.securevault:
      secretRepository:
        type: org.wso2.carbon.secvault.repository.DefaultSecretRepository
        parameters:
          privateKeyAlias: wso2carbon
          keystoreLocation: ${sys:carbon.home}/resources/security/securevault.jks
          secretPropertiesFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/secrets.properties
      masterKeyReader:
        type: org.wso2.carbon.secvault.reader.DefaultMasterKeyReader
        parameters:
          masterKeyReaderFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/master-keys.yaml
    wso2.datasources:
      dataSources:
      - name: WSO2_CLUSTER_DB
        description: The datasource used by cluster coordinators in HA deployment
        definition:
          type: RDBMS
          configuration:
            connectionTestQuery: SELECT 1
            driverClassName: com.mysql.jdbc.Driver
            idleTimeout: 60000
            isAutoCommit: false
            jdbcUrl: jdbc:mysql://wso2ei-integrator-with-analytics-rdbms-service:3306/WSO2_CLUSTER_DB?useSSL=false
            maxPoolSize: 10
            password: wso2carbon
            username: wso2carbon
            validationTimeout: 30000
      - name: WSO2_METRICS_DB
        description: The datasource used for dashboard feature
        jndiConfig:
          name: jdbc/WSO2MetricsDB
        definition:
          type: RDBMS
          configuration:
            jdbcUrl: jdbc:h2:${sys:carbon.home}/wso2/dashboard/database/metrics;AUTO_SERVER=TRUE
            username: wso2carbon
            password: wso2carbon
            driverClassName: org.h2.Driver
            maxPoolSize: 30
            idleTimeout: 60000
            connectionTestQuery: SELECT 1
            validationTimeout: 30000
            isAutoCommit: false
      - name: WSO2_PERMISSIONS_DB
        description: The datasource used for permission feature
        jndiConfig:
          name: jdbc/PERMISSION_DB
          useJndiReference: true
        definition:
          type: RDBMS
          configuration:
            jdbcUrl: jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/PERMISSION_DB;IFEXISTS=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;MVCC=TRUE
            username: wso2carbon
            password: wso2carbon
            driverClassName: org.h2.Driver
            maxPoolSize: 10
            idleTimeout: 60000
            connectionTestQuery: SELECT 1
            validationTimeout: 30000
            isAutoCommit: false
      - name: EI_ANALYTICS
        description: The datasource used for EI Analytics dashboard feature
        jndiConfig:
          name: jdbc/EI_ANALYTICS
        definition:
          type: RDBMS
          configuration:
            jdbcUrl: jdbc:mysql://wso2ei-integrator-with-analytics-rdbms-service:3306/EI_ANALYTICS?useSSL=false
            username: wso2carbon
            password: wso2carbon
            driverClassName: com.mysql.jdbc.Driver
            maxPoolSize: 50
            idleTimeout: 60000
            validationTimeout: 30000
            isAutoCommit: false
      - definition:
          configuration:
            username: wso2carbon
            driverClassName: com.mysql.jdbc.Driver
            validationTimeout: 30000
            connectionTestQuery: SELECT 1
            idleTimeout: 60000
            isAutoCommit: false
            maxPoolSize: 50
            password: wso2carbon
            jdbcUrl: jdbc:mysql://wso2ei-integrator-with-analytics-rdbms-service:3306/WSO2_PERSISTENCE_DB?useSSL=false
          type: RDBMS
        name: WSO2_PERSISTENCE_DB
        jndiConfig:
          name: jdbc/WSO2PersistenceDB
        description: The MySQL datasource used for system persistence
    siddhi:
      extensions:
      - extension:
          name: findCountryFromIP
          namespace: geo
          properties:
            geoLocationResolverClass: org.wso2.extension.siddhi.execution.geo.internal.impl.DefaultDBBasedGeoLocationResolver
            isCacheEnabled: true
            cacheSize: 10000
            isPersistInDatabase: true
            datasource: GEO_LOCATION_DATA
      - extension:
          name: findCityFromIP
          namespace: geo
          properties:
            geoLocationResolverClass: org.wso2.extension.siddhi.execution.geo.internal.impl.DefaultDBBasedGeoLocationResolver
            isCacheEnabled: true
            cacheSize: 10000
            isPersistInDatabase: true
            datasource: GEO_LOCATION_DATA
    cluster.config:
      enabled: false
      groupId: ei.analytics
      coordinationStrategyClass: org.wso2.carbon.cluster.coordinator.rdbms.RDBMSCoordinationStrategy
      strategyConfig:
        datasource: WSO2_CLUSTER_DB
        heartbeatInterval: 3000
        heartbeatMaxRetry: 2
        eventPollingInterval: 3000
    auth.configs:
      type: local          # Type of the IdP client used
      userManager:
        adminRole: admin   # Admin role which is granted all permissions
        userStore:         # User store
          users:
          - user:
              username: admin
              password: YWRtaW4=
              roles: 1
          roles:
          - role:
              id: 1
              displayName: admin
    deployment.config:
      type: ha
      eventByteBufferQueueCapacity: 20000
      byteBufferExtractorThreadPoolSize: 5
      eventSyncServer:
        host: ${NODE_IP}
        port: 9894
        advertisedHost: ${NODE_IP}
        advertisedPort: 9894
        bossThreads: 10
        workerThreads: 10
      eventSyncClientPool:
        maxActive: 10
        maxTotal: 10
        maxIdle: 10
        maxWait: 60000
        minEvictableIdleTimeMillis: 120000
kind: ConfigMap
metadata:
  name: ei-analytics-conf-worker
  namespace: "$ns.k8s&wso2.ei"
---
