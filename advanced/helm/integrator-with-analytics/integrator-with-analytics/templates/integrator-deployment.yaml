# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2ei-integrator-deployment
  namespace : {{ .Release.Namespace }}
spec:
  replicas:  {{ default 1 .Values.wso2.deployment.wso2ei.replicas }}
  minReadySeconds: {{ default 30 .Values.wso2.deployment.wso2ei.minReadySeconds }}
  strategy:
    rollingUpdate:
      maxSurge: {{ default 1 .Values.wso2.deployment.wso2ei.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ default 0 .Values.wso2.deployment.wso2ei.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2ei-integrator
  template:
    metadata:
      labels:
        deployment: wso2ei-integrator
    spec:
      initContainers:
        - name: init-is-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z wso2ei-rdbms-service-mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
        {{ if .Values.wso2.centralizedLogging.enabled }}
        - name: init-logstash-plugins-install
          image: docker.elastic.co/logstash/logstash:{{ default "7.2.0" .Values.wso2.centralizedLogging.logstash.imageTag }}
          command:
            - /bin/bash
            - "-c"
            - |
              set -e
              ./bin/logstash-plugin install logstash-codec-multiline logstash-filter-grok
          volumeMounts:
            - name: shared-plugins
              mountPath: /usr/share/logstash/plugins/
        - name: init-elasticsearch
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of Elasticsearch Server deployment"; while ! nc -z {{ default "wso2-elasticsearch-master" .Values.wso2.centralizedLogging.logstash.elasticsearch.host }} 9200; do sleep 1; printf "-"; done; echo -e "  >> Elasticsearch server has started";']
      {{ end }}
      containers:
      - name: wso2ei-integrator
        {{ if .Values.wso2.dockerRegistry }}
        image: {{ .Values.wso2.dockerRegistry }}/{{ default "wso2ei-integrator" .Values.wso2.deployment.wso2ei.imageName }}:{{ .Values.wso2.deployment.wso2ei.imageTag }}
        {{ else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
        image: wso2/{{ default "wso2ei-integrator" .Values.wso2.deployment.wso2ei.imageName }}:{{ .Values.wso2.deployment.wso2ei.imageTag }}
        {{ else }}
        image: docker.wso2.com/{{ default "wso2ei-integrator" .Values.wso2.deployment.wso2ei.imageName }}:{{ .Values.wso2.deployment.wso2ei.imageTag }}
        {{ end }}
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - nc -z localhost 9443
          initialDelaySeconds: {{ default 100 .Values.wso2.deployment.wso2ei.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.wso2.deployment.wso2ei.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - nc -z localhost 9443
          initialDelaySeconds: {{ default 100 .Values.wso2.deployment.wso2ei.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.wso2.deployment.wso2ei.readinessProbe.periodSeconds }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
          limits:
            memory: {{ .Values.wso2.deployment.wso2ei.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.wso2ei.resources.limits.cpu }}
        ports:
        - containerPort: 8280
          protocol: TCP
        - containerPort: 8243
          protocol: TCP
        - containerPort: 9763
          protocol: TCP
        - containerPort: 9443
          protocol: TCP
        volumeMounts:
        - name: integrator-conf
          mountPath: /home/wso2carbon/wso2-config-volume/conf
        - name: integrator-conf-axis2
          mountPath: /home/wso2carbon/wso2-config-volume/conf/axis2
        - name: integrator-conf-datasources
          mountPath: /home/wso2carbon/wso2-config-volume/conf/datasources
        - name: shared-pd
          mountPath: /home/wso2carbon/wso2ei-6.5.0/repository/deployment/server
      serviceAccountName: {{ .Values.svcaccount }}
      {{ if and (not (eq .Values.username "")) (not (eq .Values.password "")) }}
      imagePullSecrets:
      - name: wso2creds
        - name: wso2ei-deployment-creds
      {{ end }}
      volumes:
      - name: integrator-conf
        configMap:
          name: integrator-conf
      - name: integrator-conf-axis2
        configMap:
          name: integrator-conf-axis2
      - name: integrator-conf-datasources
        configMap:
          name: integrator-conf-datasources
      - name: shared-pd
        persistentVolumeClaim:
          claimName: integrator-shared-deployment-volume-claim
